name: Build and Publish CLI

on:
    push:
        branches:
            - master
        paths:
            - 'content/**'
            - 'content/*.json'
            - '**.json'
    workflow_run:
        types:
            - completed
        workflows:
            - 'Auto Merge Pull Requests'
    workflow_dispatch:

env:
    DEBUG: 1
    AZURE_TTS_KEY: ${{ secrets.AZURE_TTS_KEY }}
    AZURE_TTS_REGION: ${{ secrets.AZURE_TTS_REGION }}
    GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
    GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
    GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
    INSTAGRAM_EMAIL: ${{ secrets.INSTAGRAM_EMAIL }}
    INSTAGRAM_PASSWORD: ${{ secrets.INSTAGRAM_PASSWORD }}
    YOUTUBE_REFRESH_TOKEN: ${{ secrets.YOUTUBE_REFRESH_TOKEN }}
    #  ACTIONS_RUNNER_DEBUG: true
    #  ACTIONS_STEP_DEBUG: true

jobs:
    CacheDependencies:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Node.JS environment
              uses: actions/setup-node@v2.1.4
              with:
                  node-version: 14.x

            - name: Cache node_modules
              id: dependencies
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

            - name: Install project dependencies
              if: steps.dependencies.outputs.cache-hit != 'true'
              run: yarn

    TextToSpeech:
        needs: [CacheDependencies]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Node.JS environment
              uses: actions/setup-node@v2.1.4
              with:
                  node-version: 14.x

            - name: Get node_modules from cache
              id: dependencies
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

            - name: Install project dependencies
              if: steps.dependencies.outputs.cache-hit != 'true'
              run: yarn

            - name: Create TTS
              run: yarn video:make:tts

            - name: Save TTS files in Artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: audio-files
                  path: tmp/*.mp3
                  retention-days: 3

    YouTube-CreateVideo:
        needs: [TextToSpeech]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Install FFMPEG
              uses: FedericoCarboni/setup-ffmpeg@v1

            - name: Download TTS files
              uses: actions/download-artifact@v2
              with:
                  name: audio-files
                  path: tmp/

            - name: Get node_modules from cache
              id: dependencies
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

            - name: Install project dependencies
              if: steps.dependencies.outputs.cache-hit != 'true'
              run: yarn

            - name: Create Youtube video
              run: yarn video:make:youtube

            - name: Save video in Artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: youtube-video-assets
                  path: |
                      tmp/*.mp4
                      tmp/*.jpeg
                      tmp/*.json
                      !tmp/example.json
                  retention-days: 2

    YouTube-UploadVideo:
        needs: [YouTube-CreateVideo]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Download Youtube assets
              uses: actions/download-artifact@v2
              with:
                  name: youtube-video-assets
                  path: tmp/

            - name: Get node_modules from cache
              id: dependencies
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

            - name: Install project dependencies
              if: steps.dependencies.outputs.cache-hit != 'true'
              run: yarn

            - name: Upload Youtube video
              run: yarn video:upload:youtube

            # - name: SSH debug
            #   if: ${{ failure() }}
            #   uses: mxschmitt/action-tmate@v3
            #   with:
            #     limit-access-to-actor: true

    Instagram-CreateVideo:
        needs: [TextToSpeech]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Install FFMPEG
              uses: FedericoCarboni/setup-ffmpeg@v1

            - name: Download TTS files
              uses: actions/download-artifact@v2
              with:
                  name: audio-files
                  path: tmp/

            - name: Get node_modules from cache
              id: dependencies
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

            - name: Install project dependencies
              if: steps.dependencies.outputs.cache-hit != 'true'
              run: yarn

            - name: Create Instagram video
              run: yarn video:make:instagram

            - name: Save video in Artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: instagram-video-assets
                  path: |
                      tmp/*.mp4
                      tmp/*.jpeg
                      tmp/*.json
                      !tmp/example.json
                  retention-days: 2

    Instagram-UploadVideo:
        needs: [Instagram-CreateVideo]
        runs-on: ubuntu-latest
        timeout-minutes: 15
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Install virtual display
              run: sudo apt-get update && sudo apt-get install -yq --no-install-recommends xvfb xauth ffmpeg libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 libnss3

            - name: Install full Google Chrome
              run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && sudo apt install ./google-chrome-stable_current_amd64.deb -y

            - name: Exports chrome bin path to ENV
              run: export CHROME_BIN=$(which google-chrome)

            - name: Download Instagram assets
              uses: actions/download-artifact@v2
              with:
                  name: instagram-video-assets
                  path: tmp/

            - name: Get node_modules from cache
              id: dependencies
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

            - name: Install project dependencies
              if: steps.dependencies.outputs.cache-hit != 'true'
              run: yarn

            - name: Uplaod Instagram video
              run: xvfb-run --server-args="-screen 0, 1920x1920x24" yarn video:upload:instagram
