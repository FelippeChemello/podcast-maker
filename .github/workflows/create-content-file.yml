name: Create content file

on:
    schedule:
        - cron: '20 14 * * 1-5'
    workflow_dispatch:

env:
    DEBUG: 1
    GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
    GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
    GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
    #  ACTIONS_RUNNER_DEBUG: true
    #  ACTIONS_STEP_DEBUG: true

jobs:
    CreateContentFile:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Node.JS environment
              uses: actions/setup-node@v2.1.4
              with:
                  node-version: 14.x

            - name: Global output and Yarn Config
              id: global
              run: |
                  echo "::set-output name=formattedDate::$(date +%d/%m/%Y)"
                  echo "::set-output name=bashDate::$(date +%d-%m-%Y)"
                  echo "::set-output name=yarnPath::$(yarn cache dir)"
                  yarn config set prefix $(yarn cache dir)
                  echo $(yarn global bin) >> $GITHUB_PATH
                  yarn config set global-folder $(yarn cache dir)

            - name: podcast-maker CLI cache
              uses: actions/cache@v2
              id: podcast-maker-cache
              with:
                  path: |
                      ${{ steps.global.outputs.yarnPath }}
                      **/node_modules
                  key: ${{ runner.os }}-yarn-${{ env.cache-version }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-${{ env.cache-version }}-
                      ${{ runner.os }}-yarn-
                      ${{ runner.os }}-

            - name: Install CLI
              if: steps.podcast-maker-cache.outputs.cache-hit != 'true'
              run: yarn global add podcast-maker

            - name: Create SymLink from content directory (on code) to content directory (created by podcast-maker CLI)
              run: |
                  DataPath=$(podcast-maker info content --dir | sed -e "s/\/[^\/]*$//")
                  ContentPath=$(podcast-maker info content --dir)
                  if [ -d "$ContentPath" ]; then 
                      ls $ContentPath;
                      echo "ContentPath exists, deleting it"; 
                      rm -rf $ContentPath; 
                  fi; 
                  echo "Creating SymLink from $(pwd)/content to $DataPath"; 
                  ln -s $(pwd)/content $DataPath

            - name: Get current date
              id: date
              run: |
                  echo "::set-output name=formattedDate::$(date +%d/%m/%Y)"
                  echo "::set-output name=bashDate::$(date +%d-%m-%Y)"

            - name: Create Content File
              run: podcast-maker content mail

            - name: Generate GitHub Token
              uses: tibdex/github-app-token@v1.5.0
              id: generate-token
              with:
                  app_id: ${{ secrets.ID_GITHUB_APP }}
                  private_key: ${{ secrets.PRIVATE_KEY_GITHUB_APP }}

            - name: Create PR to master with Content File
              uses: peter-evans/create-pull-request@v3
              with:
                  title: Conteúdo ${{ steps.date.outputs.formattedDate }}
                  body: Automação - Conteúdo ${{ steps.date.outputs.formattedDate }}
                  branch: ${{ steps.date.outputs.formattedDate }}
                  commit-message: Conteúdo ${{ steps.date.outputs.formattedDate }}
                  token: ${{ steps.generate-token.outputs.token }}
